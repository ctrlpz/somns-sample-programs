class InternetCafeAppTest usingPlatform: platform testFramework: minitest = Value (
| private AsyncTestContext = minitest AsyncTestContext.
  private actors = platform actors.
  private Exception   = platform kernel Exception.
  private cafeApp = (platform system
    loadModule: 'src/InternetCafeApplication.ns' nextTo: self)
      usingPlatform: platform.
  private InternetCafe = cafeApp InternetCafe.
  private Customer = cafeApp Customer.
|
)(

  public class CafeTest = AsyncTestContext ()(

        public testAsyncAskComputer = (
          | cafeActor numberComputers numberCustomers pCustomer pResult |

             numberComputers:: 3.
             numberCustomers:: 1.

             cafeActor:: (actors createActorFromValue: InternetCafe) <-: new: numberComputers totalCustomers: numberCustomers.

             pCustomer:: (actors createActorFromValue: Customer) <-: new: 'Paul' room: cafeActor.

             pResult:: pCustomer <-: askComputer.

             ^ pResult whenResolved:[: array |
                      assert: (array at: 1) equals:'Paul'.
                      assert: (array at: 2) equals: 1.
             ].
        )

        public testAsyncFullRoom = (
          | cafeActor numberComputers numberCustomers pResult1 pResult2 pResult3 pCustomer1 pCustomer2 pCustomer3 pp |

          numberComputers:: 2.
          numberCustomers:: 3.

          cafeActor:: (actors createActorFromValue: InternetCafe) <-: new: numberComputers totalCustomers: numberCustomers.

          pCustomer1:: (actors createActorFromValue: Customer) <-: new: 'Paul' room: cafeActor.
          pCustomer2:: (actors createActorFromValue: Customer) <-: new: 'Jane' room: cafeActor.
          pCustomer3:: (actors createActorFromValue: Customer) <-: new: 'Julia' room: cafeActor.

          pResult1:: pCustomer1 <-: askComputer.
          pResult2:: pCustomer2 <-: askComputer.
          pResult3:: pCustomer3 <-: askComputer.

          ^ pResult1 whenResolved:[:r1 |
                assert: (r1 at: 1) equals:'Paul'.
                assert: (r1 at: 2) equals: 1.

              pResult2 whenResolved:[:r2 |
                assert: (r2 at: 1) equals:'Jane'.
                assert: (r2 at: 2) equals: 2.

                pResult3 whenResolved:[:r3 |
                  assert: (r3 at: 1) equals:'Julia'.
                  assert: ((r3 at: 2) asString) equals:'instance of FarReference'.
                  (* far reference that represents the promise pair created because there is no computer availability *)
                ].
              ].
            ].
        )


  ) : (
       TEST_CONTEXT = () )
)